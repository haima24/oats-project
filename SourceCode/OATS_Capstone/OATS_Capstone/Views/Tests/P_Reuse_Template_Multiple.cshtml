@model OATS_Capstone.Models.Question
@{
    var answers = @Model.Answers.Where(k => !String.IsNullOrEmpty(k.AnswerContent)).Select(i => i.AnswerContent);
    var answersDescription =answers.Count()==0?string.Empty: answers.Aggregate((w, n) => w + "/ " + n);
    }
<div class="nt-qsearch" question-id="@Model.QuestionID">
    <div>
        <i class="t-icon i-multiple"></i>
    </div>
    <div class="nt-qsearch-content">
        <div class="nt-qsearch-title">
            <p>@Model.QuestionTitle</p>
        </div>
        <div class="nt-qsearch-desc">@answersDescription</div>
    </div>
    <div class="nt-qsearch-popover-cont">
        <div class="nt-qsearch-popover">
            <div class="nt-qtext nt-phrase">
                <p>@Model.QuestionTitle</p>

            </div>
            <div class="nt-qanscont">
                @foreach (var ans in Model.Answers)
                {
                    <div class="nt-qans">
                        <label class="checkbox nt-qans-label nt-qans-label-rep">
                            @if (ans.IsRight)
                            {
                                <input type="checkbox" checked="checked" disabled="disabled" />
                            }
                            else
                            {
                                <input type="checkbox" disabled="disabled" />
                            }
                            <div class="nt-qansdesc">
                                <p>@ans.AnswerContent</p>
                            </div>
                        </label>
                        <div class="nt-qansrep">
                            <div class="nt-qpts">@(ans.Score??0) pts</div>
                        </div>
                    </div>
                }
            </div>
            <div class="nt-taglist">
            </div>
        </div>
    </div>
</div>
